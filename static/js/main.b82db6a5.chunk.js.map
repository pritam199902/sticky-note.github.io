{"version":3,"sources":["components/AddNew.jsx","components/List.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddNew","action","useState","note","setNote","className","style","color","onSubmit","e","preventDefault","obj","id","Math","floor","random","text","isDone","addnew","alert","type","aria-describedby","placeholder","fontSize","value","onChange","target","List","data","message","editData","setEditData","Item","info","i","checked","togle","htmlFor","href","cursor","onClick","data-toggle","data-target","data-backdrop","data-keyboard","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","handleChangeText","update","delete","role","resetMsg","length","map","styles","navbar","backgroundColor","title","Nav","src","width","height","alt","loading","App","setData","msg","setMsg","bind","indexOf","filter","ele","d","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b82db6a5.chunk.js","sourcesContent":["import React,{useState } from 'react'\r\n\r\nconst AddNew = ({action}) => {\r\n    // data\r\n    const [note, setNote] = useState(\"\");\r\n    \r\n    //handleChangeText\r\n    const handleChangeText =(e)=>{\r\n        // console.log(e.target.value);\r\n        setNote(e.target.value)\r\n    }\r\n\r\n    // handleSubmit\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        // console.log(e);\r\n        if (note !== \"\" && note !== \" \" ){\r\n            const obj = {\r\n                id : Math.floor(Math.random(10)*10000)+1,\r\n                text : note,\r\n                isDone : false\r\n            }\r\n            action.addnew(obj);\r\n            setNote('')\r\n        }else{\r\n            alert(\"Note must have some text. It should not be blank\")\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-7 col-md-7 col-sm-8 m-auto\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body py-2\">\r\n              <h4 style={{color : '#888'}} > <i className=\"fa fa-pen\"></i> New Note</h4>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-11 col-md-11 col-sm-11 m-auto\">\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"My note...\"\r\n                        style={{fontSize : 20}}\r\n                        value={note}\r\n                        onChange={handleChangeText}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group mb-1\">\r\n                    <button type=\"submit\" className=\"btn btn-info px-4\" >\r\n                      <i className=\"fa fa-plus\"></i>  ADD\r\n                    </button>\r\n                </div>\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AddNew;\r\n","import React, { useState } from \"react\";\r\n\r\nconst List = ({ data, action, message }) => {\r\n  const [editData, setEditData] = useState({});\r\n\r\n\r\n\r\n  // action\r\n  const handleChangeText = (e) => {\r\n    //   if(e.target.value !== \"\" && e.target.value !== \" \"){\r\n    setEditData({\r\n      id: editData.id,\r\n      isDone: editData.isDone,\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    action.delete(id);\r\n  };\r\n\r\n  //COMPONENTS\r\n  const Item = (info, i) => {\r\n    return (\r\n      <div key={i} className=\"row\">\r\n        <div className=\"col m-auto\">\r\n          <div key={i} className=\"row\">\r\n            <div className=\"col-8 m-auto\">\r\n              <h4 className={info.isDone ? \"text-left\" : \"text-left text-info\"} style={info.isDone ? {color : \"#ddd\"} :{} } >\r\n                <span className={ !info.isDone ? \"badge badge-pill badge-info mr-3\" : \"badge badge-pill badge-secondary mr-3\"}>\r\n                  {i + 1}\r\n                </span>\r\n                {info.text}\r\n              </h4>\r\n            </div>\r\n            {/*  */}\r\n            \r\n            {/*  */}\r\n            <div className=\"col-1 m-auto\">\r\n              <div className=\"custom-control custom-switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id={`chklabel${i}`}\r\n                  checked={info.isDone}\r\n                  onChange={(e) => {\r\n                    action.togle(info.id);\r\n                  }}\r\n                />\r\n                <label\r\n                  className=\"custom-control-label\"\r\n                  htmlFor={`chklabel${i}`}\r\n                ></label>\r\n              </div>\r\n            </div>\r\n            {/*  */}\r\n            {info.isDone && (\r\n              <div className=\"col-1 m-auto\">\r\n                <i className=\"fa fa-check text-success\"></i>\r\n              </div>\r\n            )}\r\n            {!info.isDone && (\r\n              <div className=\"col-1 m-auto\">\r\n                <a\r\n                  href=\"#update\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    setEditData(info);\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa fa-edit\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#modal${i}`}\r\n                  ></i>\r\n                </a>\r\n              </div>\r\n            )}\r\n            {/* modal */}\r\n            <div\r\n              className=\"modal fade\"\r\n              id={`modal${i}`}\r\n              data-backdrop=\"static\"\r\n              data-keyboard=\"false\"\r\n              tabIndex=\"-1\"\r\n              aria-labelledby=\"staticBackdropLabel\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"staticBackdropLabel\">\r\n                      Update Note\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      data-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                    >\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"form-group\">\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Your note here...\"\r\n                        value={editData.text}\r\n                        onChange={(e) => handleChangeText(e)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-secondary\"\r\n                      data-dismiss=\"modal\"\r\n                      onClick={() => {\r\n                        setEditData({});\r\n                      }}\r\n                    >\r\n                      Close\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      data-dismiss=\"modal\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => {\r\n                        editData.text !== \" \" && editData.text !== \"\"\r\n                          ? action.update(editData)\r\n                          : alert(\"Note must not be blank!\");\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* ---- */}\r\n\r\n            {/* ----- */}\r\n            <div className=\"col-1 m-auto\">\r\n              <a\r\n                href=\"#delete\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  handleDelete(info.id);\r\n                }}\r\n              >\r\n                <i className=\"fa fa-times text-danger\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const msg = () => {\r\n    return (\r\n      <div className={message.type} role=\"alert\">\r\n        <strong>{message.text}</strong>\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={() => {\r\n            action.resetMsg();\r\n          }}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const noData = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col m-auto\">\r\n          <h4>-- no note found --</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-3 \">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-7 col-md-7 col-sm-8 m-auto\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body pb-1\">\r\n              {message && msg()}\r\n              {data.length > 0 ? (\r\n                <>{data.map((info, i) => [Item(info, i)])}</>\r\n              ) : (\r\n                <>{noData()}</>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-light justify-content-center shadow\" style={styles.navbar}>\r\n      <h3>\r\n\r\n      <a className=\"navbar-brand text-center\" style={{color: '#faa', fontSize: 23}} href=\"#\">\r\n       \r\n        <img\r\n          src=\"./logo1.png\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top mr-3\"\r\n          alt=\"\"\r\n          loading=\"lazy\"\r\n        />\r\n       \r\n        Sticky Notes\r\n      </a>\r\n     </h3>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n    navbar :{\r\n        backgroundColor : '#444',\r\n    },\r\n    title : {\r\n        color: '#faa'\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import {useState} from 'react';\nimport './App.css';\nimport Add from './components/AddNew';\nimport List from './components/List';\nimport Nav from './components/Nav';\n\n\n\nconst  App = () => {\n\n  // const arr =[\n  //   {\n  //     id : 1,\n  //     text : \"weak up at 5 a.m.\",\n  //     isDone : false\n  //   },\n  //   {\n  //     id : 2,\n  //     text : \"tooth brash\",\n  //     isDone : true\n  //   },\n  //   {\n  //     id : 3,\n  //     text : \"excercise for 30 munite \",\n  //     isDone : false\n  //   },\n  //   {\n  //     id : 4,\n  //     text : \"let start HackerRanck\",\n  //     isDone : false\n  //   },\n\n   \n  // ]\n\n  // data\n  const [data, setData] = useState([])\n  const [msg, setMsg] = useState()\n  // actions //\n  // add \n  const addNewNote =(note)=>{\n    // console.log(\"ADDED : \", note);\n    setData([...data, note])\n    setMsg({\n      type : \"alert alert-success alert-dismissible fade show\",\n      text : \"New note added!\"\n    })\n  }\n\n  // update\n  const updateNote =(note)=>{\n    // console.log(\"UPDATED : \", note);\n    // console.log(data[data.indexOf(data.filter(ele=>ele.id === note.id)[0])]);\n    data[data.indexOf(data.filter(ele=>ele.id === note.id)[0])]=note;\n    // console.log(data[data.indexOf(data.filter(ele=>ele.id === note.id)[0])]);\n    setData([...data])\n    setMsg({\n      type : \"alert alert-success alert-dismissible fade show\",\n      text : \"Note updated!\"\n    })\n  }\n\n  //delete\n  const deleteNote = (id) =>{\n    // console.log(\"DELETED \", id );\n    setData(data.filter(d => d.id !== id))\n    setMsg({\n      type : \"alert alert-danger alert-dismissible fade show\",\n      text : \"Note deleted!\"\n    })\n  }\n\n  const handleTogle =(id)=>{\n    console.log(data[data.indexOf(data.filter(d => d.id === id)[0])].isDone);\n    data[data.indexOf(data.filter(d => d.id === id)[0])].isDone = ! data[data.indexOf(data.filter(d => d.id === id)[0])].isDone \n    setData([...data])\n  }\n\n  const resetMsg=()=>{\n    setMsg()\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Add action={ {addnew: addNewNote.bind(this)}} />\n      <List data={data} \n        message={msg}\n        action={{\n          update: updateNote.bind(this),\n          delete : deleteNote.bind(this),\n          resetMsg : resetMsg.bind(this),\n          togle : handleTogle.bind(this)\n        }} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}